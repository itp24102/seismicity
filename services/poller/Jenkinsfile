pipeline {
    agent {
        kubernetes {
            label 'docker-agent'
            defaultContainer 'jnlp'
            yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
    - name: jnlp
      image: ghcr.io/itp24102/jenkins-docker-agent:latest
      tty: true
      volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
  volumes:
    - name: docker-sock
      hostPath:
        path: /var/run/docker.sock
"""
        }
    }

    environment {
        IMAGE = "ghcr.io/itp24102/poller:latest"
        CONTEXT = "./services/poller"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build & Push') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'ghcr-pat',
                    usernameVariable: 'GHCR_USER',
                    passwordVariable: 'GHCR_TOKEN'
                )]) {
                    sh '''
                        echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin
                        docker build -t "$IMAGE" "$CONTEXT"
                        docker push "$IMAGE"
                    '''
                }
            }
        }

        stage('Trigger ArgoCD') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'argocd-cli',
                    usernameVariable: 'ARGO_USER',
                    passwordVariable: 'ARGO_PASS'
                )]) {
                    sh 'argocd login $ARGO_SERVER --username $ARGO_USER --password $ARGO_PASS --insecure'
                    sh 'argocd app sync seismicity-app'
                }
            }
        }
    }
}
