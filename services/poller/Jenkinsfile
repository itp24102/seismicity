pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins/pod.yaml'
      defaultContainer 'python'
    }
  }

  environment {
    AWS_REGION = 'eu-west-1'
    S3_BUCKET  = 'seismicity-app-bucket'
    ROLE_ARN   = 'arn:aws:iam::423621632909:role/seismicity-lambda-role'
  }

  stages {
    stage('Install Dependencies') {
      steps {
        dir('services/poller') {
            sh 'pip install --target build/ -r requirements.txt'
        }
      }
    }

    stage('Copy Source') {
      steps {
        dir('services/poller') {
          sh 'cp src/handler.py build/'
        }
      }
    }

    stage('Package') {
      steps {
        dir('services/poller/build') {
            sh 'zip -r ../function.zip .'
        }
      }
    }

    stage('Upload to S3') {
      steps {
        dir('services/poller') {
          withCredentials([[
            $class: 'AmazonWebServicesCredentialsBinding',
            credentialsId: 'aws-credentials'
          ]]) {
            sh '''
              aws s3 cp function.zip s3://$S3_BUCKET/function.zip --region $AWS_REGION
            '''
          }
        }
      }
    }

    stage('Update Lambda Code') {
      steps {
        dir('services/poller') {
          withCredentials([[
            $class: 'AmazonWebServicesCredentialsBinding',
            credentialsId: 'aws-credentials'
          ]]) {
            sh '''
              echo "🔁 Ενημέρωση υπάρχουσας Lambda..."
              aws lambda update-function-code \
                --function-name seismicity-function \
                --s3-bucket $S3_BUCKET \
                --s3-key function.zip \
                --region $AWS_REGION
            '''
          }
        }
      }
    }

    stage('Apply Infrastructure with OpenTofu') {
      steps {
        container('awscli') {
          dir('infrastructure/opentofu/aws/poller') {
            withCredentials([[
              $class: 'AmazonWebServicesCredentialsBinding',
              credentialsId: 'aws-credentials'
            ]]) {
              sh '''
                tofu init
                tofu apply -auto-approve \
                  -var=region=$AWS_REGION \
                  -var=s3_bucket_name=$S3_BUCKET \
                  -var=lambda_role_arn=$ROLE_ARN
              '''
            }
          }
        }
      }
    }

  post {
    failure {
      echo '❌ Κάποιο στάδιο απέτυχε.'
    }
  }
}
