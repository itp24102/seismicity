pipeline {
  agent {
    kubernetes {
      yaml """
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: python
    image: python:3.11
    command:
    - cat
    tty: true
"""
    }
  }
  environment {
    FUNCTION_NAME = 'seismicity-function'
  }
  options {
    skipDefaultCheckout()
  }
  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Prepare') {
      steps {
        dir('services/poller') {
          sh '''
            rm -rf build function.zip
            mkdir -p build
            pip install --break-system-packages -r requirements.txt -t build/
            cp src/handler.py build/
          '''
        }
      }
    }

    stage('Package') {
      steps {
        dir('services/poller/build') {
          sh 'zip -r ../function.zip .'
        }
      }
    }

    stage('Deploy to AWS Lambda') {
      steps {
        dir('services/poller') {
          withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials']]) {
            sh 'aws lambda update-function-code --function-name $FUNCTION_NAME --zip-file fileb://function.zip --region eu-west-1'
          }
        }
      }
    }

    stage('Apply Infrastructure with OpenTofu') {
      steps {
        dir('infrastructure/opentofu/aws/handler') {
          withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-credentials']]) {
            sh '''
              tofu init -input=false
              tofu apply -auto-approve
            '''
          }
        }
      }
    }
  }

  post {
    failure {
      echo "❌ Κάποιο στάδιο απέτυχε."
    }
    success {
      echo "✅ Επιτυχής ανάπτυξη της Lambda και του infrastructure."
    }
  }
}
